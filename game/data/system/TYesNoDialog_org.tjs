//==============================================================
//	TYesNoDialog
//==============================================================

class TYesNoDialog extends Window{

	var yesButton;		//	[はい] ボタン
	var noButton;		//	[いいえ] ボタン
	var result=false;	//	no:false yes:true
	var items;
	var layer;

	function TYesNoDialog(message,cap){

		super.Window();

		// このウィンドウではもっとも基本的なdrawerを用いる
//		drawDevice.preferredDrawer = global.Window.PassThroughDrawDevice.dtDrawDib;

		// メインウィンドウから cursor**** の情報をとってくる
//		if(global.Window.mainWindow !== null &&
//			typeof global.Window.mainWindow.cursorDefault != "undefined")
//			this.cursorDefault = global.Window.mainWindow.cursorDefault;
//		if(global.Window.mainWindow !== null &&
//			typeof global.Window.mainWindow.cursorPointed != "undefined")
//			this.cursorPointed = global.Window.mainWindow.cursorPointed;

		//	外見の調整
		borderStyle=bsDialog;
		innerSunken=false;
		caption=cap;
		showScrollBars=false;

		//	プライマリレイヤの作成
		add(new Layer(this,null));

		// プライマリのマウスカーソルを設定
		primaryLayer.cursor=tWindow.getCursor(tSettings.cursorDefault);

		var iw,ih,ty,tcolor;
		items=new Array();
		var lines=new Array();
		lines.load(FileYesNoSetting);
		for(var i=0;i<lines.count;i++){
			var key,object,idx;
			if((idx=lines[i].indexOf(":"))>0){
				key=lines[i].substring(0,idx).trim();
				object=lines[i].substring(idx+1).trim();
			}
			if(key!==void&&object!=""){
				if("image"==key){
					var param=object.split(' \t',,true);
					var image=param[0];
					iw=+param[1];
					ih=+param[2];
					layer=new Layer(this,primaryLayer);
					layer.loadImages(image);
					layer.setSizeToImageSize();
					layer.setPos(0,0);
					layer.visible=true;
				}else if("caption"==key){
					var param=object.split(' \t',,true);
					ty=+param[0];
					tcolor=+param[1];
					layer.font.height=+param[2];
				}else if("button"==key){
					var param=object.split(' \t',,true);
					var tag=param[0];
					var image=param[1];
					var x=+param[2],y=+param[3];
					var overSE=param[4];
					var downSE=param[5];
					var cursor=param[6];
					var temp=new TButton(this,primaryLayer,event,tag);
					temp.setImage(x,y,image);
					temp.setCursor(cursor);
					temp.setVisible(true);
					if(overSE=="off"){temp.buttonStatus.overSE=void;}else if(overSE!="void"){temp.buttonStatus.overSE=overSE;}
					if(downSE=="off"){temp.buttonStatus.downSE=void;}else if(downSE!="void"){temp.buttonStatus.downSE=downSE;}
					//SE設定
/*
					if(overSE=="off"){
						temp.buttonStatus.overSE=void;
					}else if(overSE!="void"){
						var type=overSE.substr(0,3);
						if('***'==type){
							temp.buttonStatus.overSysVoice=overSE.substr(3);
							if(tGlobalData.data.environment.sysVoice=='def'){
								overSE=void;
							}else{
								overSE=tGlobalData.data.environment.sysVoice+overSE.substr(3);
							}
						}
						temp.buttonStatus.overSE=overSE;
					}
					if(downSE=="off"){
						temp.buttonStatus.downSE=void;
					}else if(downSE!="void"){
						var type=downSE.substr(0,3);
						if('***'==type){
							temp.buttonStatus.downSysVoice=downSE.substr(3);
							if(tGlobalData.data.environment.sysVoice=='def'){
								downSE=void;
							}else{
								downSE=tGlobalData.data.environment.sysVoice+downSE.substr(3);
							}
						}
						temp.buttonStatus.downSE=downSE;
					}
*/

					items.add(temp);
				}
			}
		}

		// サイズを決定
		setInnerSize(primaryLayer.width=(iw?iw:layer.width),primaryLayer.height=(ih?ih:layer.height));

		// ウィンドウ位置の調整
		if(tWindow!==void){
			var win=tWindow;
			var l,t;
			l=((win.width-width)>>1)+win.left;
			t=((win.height-height)>>1)+win.top;
			if(l<0)l=0;
			if(t<0)t=0;
			if(l+width>System.screenWidth)l=System.screenWidth-width;
			if(t+height>System.screenHeight)t=System.screenHeight-height;
			setPos(l,t);
		}else{
			setPos((System.screenWidth-width)>>1,(System.screenHeight-height)>>1);
		}

		// メッセージの描画
		var tw=layer.font.getTextWidth(message);
		var th=layer.font.getTextHeight(message);
		layer.drawText((innerWidth-tw)>>1,ty,message,tcolor);
	}

	function finalize(){
		delete items;
		super.finalize(...);
	}

	function event(param){
		if(param.tag=="yes"){
			result=true;
		}
		close();
	}

	function onKeyDown(key,shift){
		super.onKeyDown(...);
		dm("key down "+key);
		if(key==VK_ESCAPE){
			//	ESC キーが押された
			//	「いいえ」として処理
			result=false;
			close();
		}else if(key==VK_LEFT){
			items[0].setFocus(true);
			items[1].setFocus(false);
		}else if(key==VK_RIGHT){
			items[0].setFocus(false);
			items[1].setFocus(true);
		}else if(key==VK_RETURN){
			for(var i=0;i<items.count;i++){
				if(items[i].buttonStatus.enter){
					result=items[i].buttonStatus.tag=="yes";
					close();
					return;
				}
			}
		}
	}
}

// Yes か No かはっきりさせる関数
function askYesNo(message,caption="確認"){
	var win=new TYesNoDialog(message,caption);
	win.showModal();
	var res=win.result;
	invalidate win;
	return res;
}
